#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSVGraph.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Local")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertEventLogs(EventLogs instance);
    partial void UpdateEventLogs(EventLogs instance);
    partial void DeleteEventLogs(EventLogs instance);
    partial void InsertLogs(Logs instance);
    partial void UpdateLogs(Logs instance);
    partial void DeleteLogs(Logs instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::CSVGraph.Properties.Settings.Default.LocalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EventLogs> EventLogs
		{
			get
			{
				return this.GetTable<EventLogs>();
			}
		}
		
		public System.Data.Linq.Table<Logs> Logs
		{
			get
			{
				return this.GetTable<Logs>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLogs")]
	public partial class EventLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MessageText;
		
		private string _MessageSource;
		
		private System.DateTime _MessageDate;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnMessageSourceChanging(string value);
    partial void OnMessageSourceChanged();
    partial void OnMessageDateChanging(System.DateTime value);
    partial void OnMessageDateChanged();
    #endregion
		
		public EventLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageSource", DbType="NVarChar(MAX)")]
		public string MessageSource
		{
			get
			{
				return this._MessageSource;
			}
			set
			{
				if ((this._MessageSource != value))
				{
					this.OnMessageSourceChanging(value);
					this.SendPropertyChanging();
					this._MessageSource = value;
					this.SendPropertyChanged("MessageSource");
					this.OnMessageSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDate", DbType="DateTime NOT NULL")]
		public System.DateTime MessageDate
		{
			get
			{
				return this._MessageDate;
			}
			set
			{
				if ((this._MessageDate != value))
				{
					this.OnMessageDateChanging(value);
					this.SendPropertyChanging();
					this._MessageDate = value;
					this.SendPropertyChanged("MessageDate");
					this.OnMessageDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Logs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _VarName;
		
		private System.Nullable<System.DateTime> _TimeString;
		
		private System.Nullable<double> _VarValue;
		
		private System.Nullable<bool> _Validity;
		
		private System.Nullable<double> _Time_ms;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVarNameChanging(string value);
    partial void OnVarNameChanged();
    partial void OnTimeStringChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStringChanged();
    partial void OnVarValueChanging(System.Nullable<double> value);
    partial void OnVarValueChanged();
    partial void OnValidityChanging(System.Nullable<bool> value);
    partial void OnValidityChanged();
    partial void OnTime_msChanging(System.Nullable<double> value);
    partial void OnTime_msChanged();
    #endregion
		
		public Logs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarName", DbType="NVarChar(MAX)")]
		public string VarName
		{
			get
			{
				return this._VarName;
			}
			set
			{
				if ((this._VarName != value))
				{
					this.OnVarNameChanging(value);
					this.SendPropertyChanging();
					this._VarName = value;
					this.SendPropertyChanged("VarName");
					this.OnVarNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeString", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeString
		{
			get
			{
				return this._TimeString;
			}
			set
			{
				if ((this._TimeString != value))
				{
					this.OnTimeStringChanging(value);
					this.SendPropertyChanging();
					this._TimeString = value;
					this.SendPropertyChanged("TimeString");
					this.OnTimeStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VarValue", DbType="Float")]
		public System.Nullable<double> VarValue
		{
			get
			{
				return this._VarValue;
			}
			set
			{
				if ((this._VarValue != value))
				{
					this.OnVarValueChanging(value);
					this.SendPropertyChanging();
					this._VarValue = value;
					this.SendPropertyChanged("VarValue");
					this.OnVarValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validity", DbType="Bit")]
		public System.Nullable<bool> Validity
		{
			get
			{
				return this._Validity;
			}
			set
			{
				if ((this._Validity != value))
				{
					this.OnValidityChanging(value);
					this.SendPropertyChanging();
					this._Validity = value;
					this.SendPropertyChanged("Validity");
					this.OnValidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_ms", DbType="Float")]
		public System.Nullable<double> Time_ms
		{
			get
			{
				return this._Time_ms;
			}
			set
			{
				if ((this._Time_ms != value))
				{
					this.OnTime_msChanging(value);
					this.SendPropertyChanging();
					this._Time_ms = value;
					this.SendPropertyChanged("Time_ms");
					this.OnTime_msChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
